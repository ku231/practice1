
```python
import sqlite3

# Создаем подключение к базе данных
conn = sqlite3.connect('books.db')

cursor = conn.cursor()

cursor.execute('''CREATE TABLE books
                (id INTEGER PRIMARY KEY AUTOINCREMENT,
                 title TEXT,
                 author TEXT,
                 year INTEGER,
                 file_location TEXT)''')

conn.close()
```
#Код для добавления новой книги в базу данных:
```python
import sqlite3

# Создаем подключение к базе данных
conn = sqlite3.connect('books.db')

cursor = conn.cursor()

# Информация о новой книге
title = 'Crime and Punishment'
author = 'Fyodor Dostoevsky'
year = 1866
file_location = 'C:/books/crime_and_punishment.epub'

# Добавляем новую книгу в таблицу books
cursor.execute('''INSERT INTO books (title, author, year, file_location)
                VALUES (?, ?, ?, ?)''', (title, author, year, file_location))

conn.commit()

conn.close()
```
#Пример запроса списка всех книг из базы данных:
```python
import sqlite3

# Создаем подключение к базе данных
conn = sqlite3.connect('books.db')

# Создаем объект-курсор для работы с базой данных
cursor = conn.cursor()

# Запрос на получение списка всех книг
cursor.execute('''SELECT title, author, year, file_location FROM books''')

books_list = cursor.fetchall()

# Выводим список всех книг на экран
for book in books_list:
    print('Title:', book[0])
    print('Author:', book[1])
    print('Year:', book[2])
    print('File location:', book[3])
    print('---------------------------------------')

# Функция для удаления книги из базы по ID
def delete_book(id):
    cursor.execute('DELETE FROM books WHERE id=?', (id,))
    conn.commit()
    print('Книга с ID {} удалена из базы!'.format(id))

# Функция для обновления информации о книге по ID
def update_book(id, title=None, author=None, year=None, file_path=None):
    query = 'UPDATE books SET '
    params = []

# Добавляем поля, которые нужно обновить
if title is not None:
  query += 'title=?, '
  params.append(title)
if author is not None:
  query += 'author=?, '
  params.append(author)
if year is not None:
  query += 'year=?, '
  params.append(year)
if file_path is not None:
  query += 'file_path=?, '
  params.append(file_path)

# Убираем лишнюю запятую в конце запроса
query = query.rstrip(', ')

query += ' WHERE id=?'
params.append(id)

cursor.execute(query, tuple(params))
conn.commit()
print('Информация о книге с ID {} обновлена!'.format(id))

# Функция для удаления всех книг из базы
def delete_all_books():
    cursor.execute('DELETE FROM books')
    conn.commit()
    print('Все книги удалены из базы!')

# Примеры использования функций
add_book('Преступление и наказание', 'Ф.М. Достоевский', 1866, '/books/crime_and_punishment.pdf')
add_book('Три товарища', 'Э.М. Ремарк', 1936, '/books/three_comrades.pdf')
add_book('Анна Каренина', 'Л.Н. Толстой', 1877, '/books/anna_karenina.epub')

delete_book(2)

update_book(1, author='Ф.М. Достоевский', year=1865)

delete_all_books()

conn.close()
```
